---


- name: install the 'Development tools' package group
  yum: name="@Development tools" state=present

- name: Install packages
  yum: pkg="{{ item }}" state=present
  with_items:
    - cairo-devel.x86_64
    - python-virtualenv
    - python-virtualenvwrapper
    - freetype-devel.x86_64
    - cmake
    - hdf5-devel.x86_64
    - libjpeg-turbo-devel.x86_64
    - fribidi-devel.x86_64
    - mod_fcgid.x86_64
    - geos-devel.x86_64
    - libxml2-devel.x86_64
    - giflib-devel.x86_64
    - mod_fcgid.x86_64
    - libcurl-devel
    - curl
    - libpqxx-devel.x86_64
    - librsvg2-devel.x86_64
    - openmpi-devel.x86_64
    #- libpng12-devel.x86_64
    - openjpeg-devel.x86_64
    - netcdf-devel.x86_64
    - mercurial.x86_64
    - httpd.x86_64
    - mod_wsgi.x86_64
    - nfs-utils.x86_64
    - libxslt.x86_64
    - libxslt-devel.x86_64
    - swig.x86_64
    - saxon.noarch
    - java-1.6.0-openjdk.x86_64
    - git
    - python2-pip

- name: Create directories
  command: mkdir -p /var/www/.python-eggs /opt/modwsgi /opt/templates /geodata/watershed-data /clusterdata/gstore/dataone/datasets /clusterdata/gstore/dataone/packages /clusterdata/gstore/dataone/metadata /clusterdata/gstore/tmp /clusterdata/gstore/formats /clusterdata/gstore/tileindexes /clusterdata/gstore/maps/base/shapes /clusterdata/gstore/provenance /var/www/.cache /opt/templates/gstore_v3

- group: name=webdev gid=9999 state=present
- action: user name=www-data groups=webdev append=true


- copy: src=gdal-1.11.0.tar.gz dest=/usr/local/src/gdal-1.11.0.tar.gz
- command: tar zxfv /usr/local/src/gdal-1.11.0.tar.gz -C /usr/local/src/
- copy: src=libgd-2.1.0.tar.gz dest=/usr/local/src/libgd-2.1.0.tar.gz
- command: tar zxfv /usr/local/src/libgd-2.1.0.tar.gz -C /usr/local/src/
- copy: src=ecwjp.tar.gz dest=/usr/local/src/ecwjp.tar.gz
- command: tar zxfv /usr/local/src/ecwjp.tar.gz -C /usr/local/src/
- copy: src=mapserver-6.4.1.tar.gz dest=/usr/local/src/mapserver-6.4.1.tar.gz
- command: tar zxfv /usr/local/src/mapserver-6.4.1.tar.gz -C /usr/local/src/
- copy: src=proj-4.8.0.tar.gz dest=/usr/local/src/proj-4.8.0.tar.gz
- command: tar zxfv /usr/local/src/proj-4.8.0.tar.gz -C /usr/local/src/
- copy: src=netcdf-4.3.1.1.tar.gz dest=/usr/local/src/netcdf-4.3.1.1.tar.gz
- command: tar zxfv /usr/local/src/netcdf-4.3.1.1.tar.gz -C /usr/local/src/
- copy: src=openjpeg-2.0.0.tar.gz dest=/usr/local/src/openjpeg-2.0.0.tar.gz
- command: tar zxfv /usr/local/src/openjpeg-2.0.0.tar.gz -C /usr/local/src/
- copy: src=xerces-c-3.1.1.tar.gz dest=/usr/local/src/xerces-c-3.1.1.tar.gz
- command: tar zxfv /usr/local/src/xerces-c-3.1.1.tar.gz -C /usr/local/src/
- copy: src=FileGDB_API_1_4-64.tar.gz dest=/usr/local/src/FileGDB_API_1_4-64.tar.gz
- command: tar zxfv /usr/local/src/FileGDB_API_1_4-64.tar.gz -C /usr/local/src/
- copy: src=map_templates.tar.gz dest=/tmp/map_templates.tar.gz          
- command: tar zxfv /tmp/map_templates.tar.gz -C /clusterdata/gstore/
- copy: src=pyramid.wsgi.template dest=/opt/templates/
- copy: src=utils.py dest=/usr/local/src/utils.py
- copy: src=apache.template dest=/opt/templates/
#- copy: src=createapp dest=/usr/bin/createapp
#- copy: src=dbmpasswd dest=/etc/dbmpasswd

#- name: checkout gstore
#  subversion: repo=https://edacsvn.unm.edu/virtual-watershed/gstore_v3 dest=/opt/templates/gstore_v3

#- name: svn
#  subversion: repo=https://edacsvn.unm.edu/gstore-public/sample_datasets dest=/geodata/sample_datasets

- name: set permissions for .cache
  file: path=/var/www/.cache state=directory recurse=yes owner=www-data group=www-data

- name: set permissions for geodata
  file: path=/geodata state=directory recurse=yes owner="{{ sudouser }}" group=www-data 

- name: set permissions for watershed-data
  file: path=/geodata/watershed-data state=directory recurse=yes owner=www-data group=www-data

- name: set permissions for python-eggs
  file: path=/var/www/.python-eggs/ state=directory recurse=yes owner="www-data" group=www-data

- name: set permissions for clusterdata
  file: path=/clusterdata state=directory recurse=yes owner=www-data group="{{ sudouser }}"

#- name: set permissions for /etc/dbmpasswd
#  file: path=/etc/dbmpasswd state=file owner=www-data group="{{ sudouser }}"

- name: create development.ini
  template: src=development.ini.j2 dest=/opt/templates/gstore_v3/development.ini mode=0755 owner=root group=root

#- name: exclude development.ini
#  shell: $item chdir=/opt/templates/gstore_v3
#  with_items:
#    - svn propset svn:ignore "*.ini" .

#- lineinfile: dest=/etc/profile line="LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib ; export LD_LIBRARY_PATH"

- lineinfile: dest=/etc/ld.so.conf line="/usr/local/lib"

- lineinfile: dest=/etc/ld.so.conf line="/usr/local/src/FileGDB_API-64/lib/"

- lineinfile: dest=/etc/ld.so.conf line="/usr/lib64/ogdi/"

- lineinfile: dest=/etc/ld.so.conf line="/usr/local/src/ecwjp2_sdk/lib/x64/release/"

- lineinfile: dest=/etc/ld.so.conf line="/usr/pgsql-9.4/"

- name: run ldconfig
  command: ldconfig

#- lineinfile: dest=/etc/apache2/envvars line="export LD_LIBRARY_PATH=:/usr/local/lib:/usr/include/libxml2"
#
#- name: symlink ecw library
#  file: src=/usr/local/src/ecwjp2_sdk/redistributable/x64/libNCSEcw.so.5.0.1 dest=/lib/libNCSEcw.so state=link

#:/usr/local/lib:/usr/local/src/FileGDB_API-64/lib/:/usr/lib64/ogdi/:/usr/local/src/ecwjp2_sdk/lib/x64/release/

- name: Build proj
  shell: $item chdir=/usr/local/src/proj-4.8.0
  with_items:
    - ./configure >> build.log
    - make >> build.log
    - make install >> build.log


- name: build gd
  shell: $item chdir=/usr/local/src/libgd-2.1.0
  with_items:
    - cmake . >> build.log
    - make >> build.log
    - make install >> build.log

- name: build netcdf
  shell: $item chdir=/usr/local/src/netcdf-4.3.1.1
  with_items:
    - ./configure >> build.log
    - make >> build.log
    - make install >> build.log

- name: build xerces
  shell: $item chdir=/usr/local/src/xerces-c-3.1.1
  with_items:
    - ./configure >> build.log
    - make >> build.log
    - make install >> build.log


- name: build openjpeg
  shell: $item chdir=/usr/local/src/openjpeg-2.0.0
  with_items:
    - cmake . >> build.log
    - make >> build.log
    - make install >> build.log

- name: Build gdal
  shell: $item chdir=/usr/local/src/gdal-1.11.0
  with_items:
    - ./configure --with-netcdf --with-ecw=/usr/local/src/ecwjp2_sdk/ --with-curl=/usr/bin/curl-config --with-hdf5=/user/include/ --with-openjpeg --with-fgdb=/usr/local/src/FileGDB_API-64/ --with-spatialite >> build.log
    - make >> build.log
    - make install >> build.log

- name: Create build dir
  command: mkdir /usr/local/src/mapserver-6.4.1/build

#- lineinfile: dest=/etc/profile line="LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/src/FileGDB_API-64/lib/:/usr/lib64/ogdi/:/usr/local/src/ecwjp2_sdk/lib/x64/release/ ; export LD_LIBRARY_PATH"

- name: run ldconfig again
  command: ldconfig


- name: build mapserver
  shell: $item chdir=/usr/local/src/mapserver-6.4.1/build
  with_items:
    - cmake .. -DWITH_KML=1 -DWITH_GD=1 -DWITH_RSVG=1 -DWITH_CLIENT_WMS=1 -DWITH_CLIENT_WFS=1 -DWITH_CURL=1 -DWITH_PYTHON=1 -DWITH_PHP=0 -DWITH_FCGI=0 -DCMAKE_PREFIX_PATH="/usr/pgsql-9.6/">> build.log
    - make >> build.log
    - make install >> build.log




- name: set permissions on logs dir 
  file: path=/opt/modwsgi/gstore_v3_env/gstore_v3/logs state=directory recurse=yes owner="{{ sudouser }}" group=www-data mode=0775

- name: setup LD_LIBRARY_PATH
  command: "su -c 'echo export LD_LIBRARY_PATH=:/usr/local/lib >> /home/{{ sudouser }}/.bashrc' - root"

- name: Create directories
  command: mkdir -p /opt/git/


- name: Get updated files from git repository
  git: repo=https://{{ git_username }}:{{ git_password }}@github.com/tri-state-epscor/vw-gstore.git dest=/opt/git/


- name: Manually create the initial virtualenv
  command: virtualenv --no-site-packages /opt/modwsgi/gstore_v3_env

- name: upgrade setuptools
  command: pip install --upgrade setuptools pip

- name: Install pyramid
  easy_install:
    name=pyramid==1.5.2
    virtualenv=/opt/modwsgi/gstore_v3_env
- name: Install pytz
  easy_install:
    name=pytz
    virtualenv=/opt/modwsgi/gstore_v3_env
- name: Install pymongo
  easy_install:
    name=pymongo
    virtualenv=/opt/modwsgi/gstore_v3_env
- name: Install tilecache
  easy_install:
    name=tilecache
    virtualenv=/opt/modwsgi/gstore_v3_env
- name: Install soaplib
  easy_install:
    name=soaplib
    virtualenv=/opt/modwsgi/gstore_v3_env
- name: Install psycopg2
  easy_install:
    name=psycopg2
    virtualenv=/opt/modwsgi/gstore_v3_env
  environment:
    PATH: /usr/pgsql-9.6/bin:{{ ansible_env.PATH }}
- name: Install django-hstore
  easy_install:
    name=django-hstore
    virtualenv=/opt/modwsgi/gstore_v3_env
- name: Install gdal
  easy_install:
    name=gdal==1.9.0
    virtualenv=/opt/modwsgi/gstore_v3_env
  environment:
    PATH: /usr/local/bin/:{{ ansible_env.PATH }}

- name: Install Pillow
  easy_install:
    name=Pillow
    virtualenv=/opt/modwsgi/gstore_v3_env
- name: Install xlwt
  easy_install:
    name=xlwt
    virtualenv=/opt/modwsgi/gstore_v3_env
- name: Install rdflib
  easy_install:
    name=rdflib
    virtualenv=/opt/modwsgi/gstore_v3_env
- name: Install requests
  easy_install:
    name=requests
    virtualenv=/opt/modwsgi/gstore_v3_env
- name: Install sqlalchemy
  easy_install:
    name=sqlalchemy==0.9.8
    virtualenv=/opt/modwsgi/gstore_v3_env
- name: Install paste
  easy_install:
    name=paste
    virtualenv=/opt/modwsgi/gstore_v3_env



- name: Copy mapscript.py
  command: cp /usr/local/src/mapserver-6.4.1/build/mapscript/python/mapscript.py /opt/modwsgi/gstore_v3_env/lib/python2.7/site-packages/
  command: cp /usr/local/src/mapserver-6.4.1/build/mapscript/python/_mapscript.so /opt/modwsgi/gstore_v3_env/lib/python2.7/site-packages/_mapscript.so



- name: Create pyramid.wsgi
  command: cp /opt/templates/pyramid.wsgi.template /opt/modwsgi/gstore_v3_env/pyramid.wsgi

- copy: src=apache.template dest=/etc/httpd/conf/httpd.conf

- copy: src=pcreate.sh dest=/opt/pcreate.sh
- command: bash /opt/pcreate.sh

- name: Delete dir
  command: rm -rf /opt/modwsgi/gstore_v3_env/gstore_v3

- name: Creat symlinks
  file: src=/opt/git/gstore_v3 dest=/opt/modwsgi/gstore_v3_env/gstore_v3 state=link


- name: Set permissions on pyramid.wsgi
  command: chmod 755 /opt/modwsgi/gstore_v3_env/pyramid.wsgi
#- name: Enable new site
#  command: a2ensite gstore_v3
- name: Set perms in virutal env
  command: chmod -R g+rwx /opt/modwsgi/gstore_v3_env
- name: Set ownership on virtual env
  command: chown -R {{ sudouser }}:{{ sudouser }} /opt/modwsgi/gstore_v3_env
- name: Copy development.ini
  command: cp /opt/templates/gstore_v3/development.ini /opt/modwsgi/gstore_v3_env/gstore_v3/development.ini

- selinux:
    policy: targeted
    state: permissive

- selinux:
    state: disabled

- name: Stop and disable firewalld.
  service:
    name: firewalld
    state: stopped
    enabled: False
- file:
    path: /usr/share/httpd/.python-eggs
    state: directory
    mode: 0755
    owner: apache

- name: Restart apache
  command: service httpd restart




